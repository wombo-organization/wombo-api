name: Wombo API (Production)

on:
  push:
    branches: [master]

env:
  CONTAINER_IMAGE: tfsantosbr/wombo.api
  CLUSTER_NAME: wombo-sandbox-cluster
  TASK_NAME: production-api-task
  TASK_DEFINITION_PATH: .aws/task-definition.production.json

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Login to Docker Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: docker build -f ./src/Wombo.Api/Dockerfile -t ${{ env.CONTAINER_IMAGE }}:$GITHUB_SHA .

      - name: Push the latest Docker image
        run: docker push ${{ env.CONTAINER_IMAGE }}:$GITHUB_SHA
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set Task Definition Values
        run: sed -i 's|CONTAINER_IMAGE|'${{ env.CONTAINER_IMAGE }}':'$GITHUB_SHA'|g' ${{ env.TASK_DEFINITION_PATH }}

      - name: ECS - Get Current Task
        run: echo "::set-env name=TASK_ARN::$(aws ecs list-tasks --cluster ${{ env.CLUSTER_NAME }} --family ${{ env.TASK_NAME }} --query 'taskArns[0]' --output text)"

      - name: ECS - Stop Current Task
        run: aws ecs stop-task --task ${{ env.TASK_ARN }} --cluster ${{ env.CLUSTER_NAME }} || true

      - name: ECS - Register New task
        run: echo "::set-env name=TASK_REVISION::$(aws ecs register-task-definition --family ${{ env.TASK_NAME }} --cli-input-json file://${{ env.TASK_DEFINITION_PATH }} --query 'taskDefinition.revision' --output text)"
 
      - name: ECS - Run New Task
        run: aws ecs run-task --task-definition ${{ env.TASK_NAME }}:${{ env.TASK_REVISION }} --cluster ${{ env.CLUSTER_NAME }}
